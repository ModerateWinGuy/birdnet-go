/**
 * Auto-generated TypeScript types for i18n translation keys
 * Generated from: static/messages/en.json
 * 
 * DO NOT EDIT THIS FILE MANUALLY
 * Run 'npm run generate:i18n-types' to regenerate
 */

/**
 * All available translation keys
 */
export type TranslationKey =
  | 'common.loading'
  | 'common.error'
  | 'common.save'
  | 'common.cancel'
  | 'common.reset'
  | 'common.refresh'
  | 'common.delete'
  | 'common.edit'
  | 'common.search'
  | 'common.filter'
  | 'common.sort'
  | 'common.actions'
  | 'common.settings'
  | 'common.close'
  | 'common.back'
  | 'common.next'
  | 'common.previous'
  | 'common.yes'
  | 'common.no'
  | 'common.ok'
  | 'common.apply'
  | 'common.clear'
  | 'common.goToDashboard'
  | 'common.reportIssue'
  | 'common.loginToViewDetails'
  | 'common.pageNotFound'
  | 'common.internalServerError'
  | 'common.buttons.save'
  | 'common.buttons.reset'
  | 'common.buttons.delete'
  | 'common.buttons.cancel'
  | 'common.buttons.apply'
  | 'common.buttons.confirm'
  | 'common.buttons.edit'
  | 'common.buttons.close'
  | 'common.buttons.back'
  | 'common.buttons.next'
  | 'common.buttons.previous'
  | 'common.buttons.yes'
  | 'common.buttons.no'
  | 'common.buttons.ok'
  | 'common.buttons.editConfig'
  | 'common.buttons.addAction'
  | 'common.ui.loading'
  | 'common.ui.noData'
  | 'common.ui.empty'
  | 'common.ui.error'
  | 'common.ui.retry'
  | 'common.ui.dismiss'
  | 'common.ui.showMore'
  | 'common.ui.showLess'
  | 'common.ui.selectAll'
  | 'common.ui.selectNone'
  | 'common.ui.required'
  | 'common.ui.optional'
  | 'common.status.success'
  | 'common.status.error'
  | 'common.status.warning'
  | 'common.status.info'
  | 'common.status.pending'
  | 'common.status.processing'
  | 'common.status.completed'
  | 'common.status.failed'
  | 'common.validation.required'
  | 'common.validation.invalid'
  | 'common.validation.minLength' // params: min
  | 'common.validation.maxLength' // params: max
  | 'common.validation.minValue' // params: min
  | 'common.validation.maxValue' // params: max
  | 'common.validation.email'
  | 'common.validation.url'
  | 'common.validation.pattern'
  | 'common.aria.closeModal'
  | 'common.aria.dismissAlert'
  | 'common.aria.closeNotification'
  | 'common.aria.toggleDropdown'
  | 'common.aria.sortAscending'
  | 'common.aria.sortDescending'
  | 'common.aria.expandSection'
  | 'common.aria.collapseSection'
  | 'common.aria.playAudio'
  | 'common.aria.pauseAudio'
  | 'common.aria.loading'
  | 'common.aria.saveChanges'
  | 'common.aria.cancelEdit'
  | 'common.aria.editSpecies'
  | 'common.aria.removeSpecies'
  | 'common.aria.dismissError'
  | 'common.modal.confirmAction'
  | 'common.modal.confirmMessage'
  | 'navigation.dashboard'
  | 'navigation.detections'
  | 'navigation.search'
  | 'navigation.analytics'
  | 'navigation.notifications'
  | 'navigation.system'
  | 'navigation.settings'
  | 'navigation.about'
  | 'navigation.toggleSidebar'
  | 'navigation.mainNavigation'
  | 'navigation.closeSidebar'
  | 'navigation.analyticsSubmenu'
  | 'navigation.settingsSubmenu'
  | 'about.title'
  | 'about.subtitle'
  | 'about.overview'
  | 'about.overviewText'
  | 'about.birdnetProject'
  | 'about.birdnetDescription'
  | 'about.developedBy'
  | 'about.developersText'
  | 'about.visitBirdnetAnalyzer'
  | 'about.contributors'
  | 'about.contributorsText'
  | 'about.mainDeveloper'
  | 'about.githubContributors'
  | 'about.contributorsNote'
  | 'about.communityAcknowledgment'
  | 'about.communityText'
  | 'about.bugReports'
  | 'about.featureSuggestions'
  | 'about.testing'
  | 'about.documentation'
  | 'about.additionalCredits'
  | 'about.birdnetPiProject'
  | 'about.birdnetPiDescription'
  | 'about.visitBirdnetPi'
  | 'about.labelTranslations'
  | 'about.labelTranslationsBy'
  | 'about.patrickLevinGithub'
  | 'about.versionInformation'
  | 'about.currentVersion'
  | 'about.buildDate'
  | 'about.developmentBuild'
  | 'about.unknown'
  | 'about.licenseInformation'
  | 'about.licenseText'
  | 'about.ccLicense'
  | 'about.licenseDescription'
  | 'about.dependencyLicenses'
  | 'notifications.title'
  | 'notifications.subtitle'
  | 'notifications.filters.allStatus'
  | 'notifications.filters.unread'
  | 'notifications.filters.read'
  | 'notifications.filters.acknowledged'
  | 'notifications.filters.allTypes'
  | 'notifications.filters.errors'
  | 'notifications.filters.warnings'
  | 'notifications.filters.info'
  | 'notifications.filters.system'
  | 'notifications.filters.detections'
  | 'notifications.filters.allPriorities'
  | 'notifications.filters.critical'
  | 'notifications.filters.high'
  | 'notifications.filters.medium'
  | 'notifications.filters.low'
  | 'notifications.actions.markAllRead'
  | 'notifications.actions.refresh'
  | 'notifications.actions.markAsRead'
  | 'notifications.actions.acknowledge'
  | 'notifications.actions.delete'
  | 'notifications.actions.confirmDelete'
  | 'notifications.actions.deleteConfirmation'
  | 'notifications.aria.filterByStatus'
  | 'notifications.aria.filterByType'
  | 'notifications.aria.filterByPriority'
  | 'notifications.empty.title'
  | 'notifications.empty.subtitle'
  | 'notifications.errors.loadFailed'
  | 'notifications.errors.deleteFailed'
  | 'notifications.errors.networkError'
  | 'notifications.timeAgo.justNow'
  | 'notifications.timeAgo.minutesAgo' // params: minutes
  | 'notifications.timeAgo.hoursAgo' // params: hours
  | 'notifications.timeAgo.daysAgo' // params: days
  | 'search.title'
  | 'search.results'
  | 'search.resultsCount' // params: count, plural
  | 'search.noSearchPerformed'
  | 'search.noSearchPerformedHint'
  | 'search.loadingResults'
  | 'search.noResultsFound'
  | 'search.noResultsHint'
  | 'search.fields.species'
  | 'search.fields.speciesPlaceholder'
  | 'search.fields.speciesHelp'
  | 'search.fields.dateRange'
  | 'search.fields.dateRangeHelp'
  | 'search.fields.from'
  | 'search.fields.to'
  | 'search.fields.confidenceRange'
  | 'search.fields.confidenceMin'
  | 'search.fields.confidenceMax'
  | 'search.fields.verifiedStatus'
  | 'search.fields.lockedStatus'
  | 'search.fields.timeOfDay'
  | 'search.advancedFilters'
  | 'search.verifiedOptions.any'
  | 'search.verifiedOptions.verified'
  | 'search.verifiedOptions.unverified'
  | 'search.lockedOptions.any'
  | 'search.lockedOptions.locked'
  | 'search.lockedOptions.unlocked'
  | 'search.timeOfDayOptions.any'
  | 'search.timeOfDayOptions.day'
  | 'search.timeOfDayOptions.night'
  | 'search.timeOfDayOptions.sunrise'
  | 'search.timeOfDayOptions.sunset'
  | 'search.sortOptions.dateDesc'
  | 'search.sortOptions.dateAsc'
  | 'search.sortOptions.speciesAsc'
  | 'search.sortOptions.confidenceDesc'
  | 'search.tableHeaders.dateTime'
  | 'search.tableHeaders.timeOfDay'
  | 'search.tableHeaders.species'
  | 'search.tableHeaders.confidence'
  | 'search.tableHeaders.status'
  | 'search.tableHeaders.actions'
  | 'search.statusBadges.verified'
  | 'search.statusBadges.false'
  | 'search.statusBadges.unverified'
  | 'search.statusBadges.locked'
  | 'search.statusBadges.unlocked'
  | 'search.detailsPanel.audioPlayer'
  | 'search.detailsPanel.expandDetails' // params: species
  | 'search.detailsPanel.collapseDetails' // params: species
  | 'search.detailsPanel.playAudio' // params: species
  | 'search.detailsPanel.viewDetails' // params: species
  | 'search.detailsPanel.unknownSpecies'
  | 'search.detailsPanel.clickToCollapse'
  | 'search.errors.searchFailed' // params: error
  | 'search.errors.minMaxConfidence'
  | 'search.pagination.page' // params: current, total
  | 'search.pagination.goToPrevious'
  | 'search.pagination.goToNext'
  | 'error.404.code'
  | 'error.404.title'
  | 'error.404.goToDashboard'
  | 'error.500.code'
  | 'error.500.title'
  | 'error.500.defaultMessage'
  | 'error.500.goToDashboard'
  | 'error.generic.errorDetails'
  | 'error.generic.stackTrace'
  | 'error.generic.goToDashboard'
  | 'error.generic.reportIssue'
  | 'error.generic.loginToViewDetails'
  | 'dashboard.dailySummary.title'
  | 'dashboard.dailySummary.columns.species'
  | 'dashboard.dailySummary.columns.detections'
  | 'dashboard.dailySummary.navigation.previousDay'
  | 'dashboard.dailySummary.navigation.nextDay'
  | 'dashboard.dailySummary.navigation.today'
  | 'dashboard.dailySummary.tooltips.viewHourly' // params: hour
  | 'dashboard.dailySummary.tooltips.viewBiHourly' // params: startHour, endHour
  | 'dashboard.dailySummary.tooltips.viewSixHourly' // params: startHour, endHour
  | 'dashboard.dailySummary.tooltips.hourlyDetections' // params: count, hour
  | 'dashboard.dailySummary.tooltips.biHourlyDetections' // params: count, startHour, endHour
  | 'dashboard.dailySummary.tooltips.sixHourlyDetections' // params: count, startHour, endHour
  | 'dashboard.dailySummary.noSpecies'
  | 'dashboard.recentDetections.title'
  | 'dashboard.recentDetections.controls.show'
  | 'dashboard.recentDetections.controls.refresh'
  | 'dashboard.recentDetections.headers.dateTime'
  | 'dashboard.recentDetections.headers.commonName'
  | 'dashboard.recentDetections.headers.thumbnail'
  | 'dashboard.recentDetections.headers.status'
  | 'dashboard.recentDetections.headers.recording'
  | 'dashboard.recentDetections.headers.actions'
  | 'dashboard.recentDetections.status.verified'
  | 'dashboard.recentDetections.status.false'
  | 'dashboard.recentDetections.status.unverified'
  | 'dashboard.recentDetections.status.locked'
  | 'dashboard.recentDetections.modals.showSpecies' // params: species
  | 'dashboard.recentDetections.modals.ignoreSpecies' // params: species
  | 'dashboard.recentDetections.modals.showSpeciesConfirm' // params: species
  | 'dashboard.recentDetections.modals.ignoreSpeciesConfirm' // params: species
  | 'dashboard.recentDetections.modals.unlockDetection'
  | 'dashboard.recentDetections.modals.lockDetection'
  | 'dashboard.recentDetections.modals.unlockDetectionConfirm' // params: species
  | 'dashboard.recentDetections.modals.lockDetectionConfirm' // params: species
  | 'dashboard.recentDetections.modals.deleteDetection' // params: species
  | 'dashboard.recentDetections.modals.deleteDetectionConfirm' // params: species
  | 'dashboard.recentDetections.noDetections'
  | 'dashboard.errors.dailySummaryFetch' // params: status
  | 'dashboard.errors.dailySummaryLoad'
  | 'dashboard.errors.recentDetectionsFetch' // params: status
  | 'dashboard.errors.recentDetectionsLoad'
  | 'dashboard.errors.configFetch' // params: status
  | 'detections.title'
  | 'detections.titles.hourly' // params: hour, date
  | 'detections.titles.hourlyRange' // params: startHour, endHour, date
  | 'detections.titles.species' // params: species, date
  | 'detections.titles.search' // params: query
  | 'detections.titles.allDetections' // params: date
  | 'detections.headers.dateTime'
  | 'detections.headers.weather'
  | 'detections.headers.species'
  | 'detections.headers.thumbnail'
  | 'detections.headers.status'
  | 'detections.headers.recording'
  | 'detections.headers.actions'
  | 'detections.empty.title'
  | 'detections.empty.description'
  | 'detections.pagination.showing' // params: from, to, total
  | 'detections.weather.noData'
  | 'detections.row.viewDetails' // params: species
  | 'system.title'
  | 'system.refreshData'
  | 'system.aria.refreshData'
  | 'system.systemInfo.title'
  | 'system.systemInfo.os'
  | 'system.systemInfo.hostname'
  | 'system.systemInfo.uptime'
  | 'system.systemInfo.cpus'
  | 'system.systemInfo.model'
  | 'system.systemInfo.timezone'
  | 'system.systemInfo.temperature'
  | 'system.systemInfo.temperatureValue' // params: temp
  | 'system.systemInfo.temperatureUnavailable'
  | 'system.diskUsage.title'
  | 'system.diskUsage.emptyMessage'
  | 'system.memoryUsage.title'
  | 'system.memoryUsage.ramUsage'
  | 'system.processInfo.title'
  | 'system.processInfo.headers.pid'
  | 'system.processInfo.headers.name'
  | 'system.processInfo.headers.status'
  | 'system.processInfo.headers.cpu'
  | 'system.processInfo.headers.memory'
  | 'system.processInfo.headers.uptime'
  | 'system.processInfo.showAll'
  | 'system.processInfo.showBirdnetOnly'
  | 'system.errors.systemInfo' // params: error
  | 'system.errors.diskUsage' // params: error
  | 'system.errors.memoryUsage' // params: error
  | 'system.errors.temperature' // params: error
  | 'system.errors.processes' // params: error
  | 'analytics.title'
  | 'analytics.loadingError'
  | 'analytics.stats.totalDetections'
  | 'analytics.stats.uniqueSpecies'
  | 'analytics.stats.avgConfidence'
  | 'analytics.stats.mostCommon'
  | 'analytics.stats.none'
  | 'analytics.stats.detections'
  | 'analytics.stats.totalSpecies'
  | 'analytics.stats.overallAverage'
  | 'analytics.periods.today'
  | 'analytics.periods.lastWeek'
  | 'analytics.periods.lastMonth'
  | 'analytics.periods.last90Days'
  | 'analytics.periods.lastYear'
  | 'analytics.periods.customRange'
  | 'analytics.periods.allTime'
  | 'analytics.filters.title'
  | 'analytics.filters.timePeriod'
  | 'analytics.filters.from'
  | 'analytics.filters.to'
  | 'analytics.filters.sortBy'
  | 'analytics.filters.searchSpecies'
  | 'analytics.filters.searchPlaceholder'
  | 'analytics.filters.reset'
  | 'analytics.filters.applyFilters'
  | 'analytics.filters.exportCsv'
  | 'analytics.filters.species'
  | 'analytics.filters.filtered'
  | 'analytics.timePeriodOptions.allTime'
  | 'analytics.timePeriodOptions.today'
  | 'analytics.timePeriodOptions.lastWeek'
  | 'analytics.timePeriodOptions.lastMonth'
  | 'analytics.timePeriodOptions.last90Days'
  | 'analytics.timePeriodOptions.lastYear'
  | 'analytics.timePeriodOptions.customRange'
  | 'analytics.sortOptions.mostDetections'
  | 'analytics.sortOptions.fewestDetections'
  | 'analytics.sortOptions.nameAZ'
  | 'analytics.sortOptions.nameZA'
  | 'analytics.sortOptions.recentlyFirstSeen'
  | 'analytics.sortOptions.earliestFirstSeen'
  | 'analytics.sortOptions.recentlyLastSeen'
  | 'analytics.sortOptions.highestConfidence'
  | 'analytics.charts.top10Species'
  | 'analytics.charts.detectionsByTimeOfDay'
  | 'analytics.charts.detectionTrends'
  | 'analytics.charts.newSpeciesDetected'
  | 'analytics.charts.noNewSpecies'
  | 'analytics.charts.noDataAvailable'
  | 'analytics.charts.numberOfDetections'
  | 'analytics.charts.detections'
  | 'analytics.charts.timePeriod'
  | 'analytics.charts.dailyDetections'
  | 'analytics.charts.date'
  | 'analytics.charts.firstHeardOn'
  | 'analytics.charts.firstHeardDate'
  | 'analytics.charts.firstHeard'
  | 'analytics.recentDetections.title'
  | 'analytics.recentDetections.headers.dateTime'
  | 'analytics.recentDetections.headers.species'
  | 'analytics.recentDetections.headers.confidence'
  | 'analytics.recentDetections.headers.timeOfDay'
  | 'analytics.recentDetections.noRecentDetections'
  | 'analytics.recentDetections.unknownSpecies'
  | 'analytics.recentDetections.unknown'
  | 'analytics.species.title'
  | 'analytics.species.subtitle'
  | 'analytics.species.speciesList'
  | 'analytics.species.switchToGrid'
  | 'analytics.species.switchToList'
  | 'analytics.species.noSpeciesFound'
  | 'analytics.species.headers.species'
  | 'analytics.species.headers.detections'
  | 'analytics.species.headers.avgConfidence'
  | 'analytics.species.headers.maxConfidence'
  | 'analytics.species.headers.firstDetected'
  | 'analytics.species.headers.lastDetected'
  | 'analytics.species.card.detections'
  | 'analytics.species.card.confidence'
  | 'analytics.species.card.first'
  | 'settings.title'
  | 'settings.loading'
  | 'settings.sections.node'
  | 'settings.sections.audio'
  | 'settings.sections.filters'
  | 'settings.sections.integration'
  | 'settings.sections.security'
  | 'settings.sections.species'
  | 'settings.sections.support'
  | 'settings.notFound.title'
  | 'settings.notFound.message' // params: section
  | 'settings.actions.save'
  | 'settings.actions.saving'
  | 'settings.actions.reset'
  | 'settings.actions.resetAriaLabel'
  | 'settings.actions.saveAriaLabel'
  | 'settings.actions.savingAriaLabel'
  | 'settings.card.changed'
  | 'settings.card.changedAriaLabel'
  | 'settings.main.sections.main.title'
  | 'settings.main.sections.main.description'
  | 'settings.main.sections.birdnet.title'
  | 'settings.main.sections.birdnet.description'
  | 'settings.main.sections.database.title'
  | 'settings.main.sections.database.description'
  | 'settings.main.sections.ui.title'
  | 'settings.main.sections.ui.description'
  | 'settings.main.fields.nodeName.label'
  | 'settings.main.fields.nodeName.placeholder'
  | 'settings.main.fields.nodeName.helpText'
  | 'settings.main.fields.sensitivity.label'
  | 'settings.main.fields.sensitivity.helpText'
  | 'settings.main.fields.threshold.label'
  | 'settings.main.fields.threshold.helpText'
  | 'settings.main.fields.overlap.label'
  | 'settings.main.fields.overlap.helpText'
  | 'settings.main.fields.locale.label'
  | 'settings.main.fields.locale.helpText'
  | 'settings.main.errors.localesLoadFailed'
  | 'settings.main.errors.providersLoadFailed'
  | 'settings.support.sections.telemetry.title'
  | 'settings.support.sections.telemetry.description'
  | 'settings.support.sections.diagnostics.title'
  | 'settings.support.sections.diagnostics.description'
  | 'settings.filters.privacyFiltering.title'
  | 'settings.filters.falsePositivePrevention.title'
  | 'settings.filters.speciesNamePlaceholder'
  | 'settings.filters.typeSpeciesName'
  | 'settings.audio.audioCapture.title'
  | 'settings.audio.audioFilters.title'
  | 'settings.audio.soundLevelMonitoring.title'
  | 'settings.audio.audioExport.title'
  | 'settings.audio.audioClipRetention.title'
  | 'settings.audio.noSoundCardCapture'
  | 'settings.audio.soundCardSource'
  | 'settings.audio.rtspSource'
  | 'settings.audio.soundLevelDataOutput'
  | 'settings.species.addSpeciesToInclude'
  | 'settings.species.addSpeciesToExclude'
  | 'settings.species.commandPathPlaceholder'
  | 'settings.species.parametersPlaceholder'
  | 'settings.security.hostPlaceholder'
  | 'settings.security.allowedUsersPlaceholder'
  | 'settings.security.subnetPlaceholder'
  | 'settings.database.sqlitePlaceholder'
  | 'settings.database.mysqlHostPlaceholder'
  | 'settings.database.mysqlUsernamePlaceholder'
  | 'auth.logout'
  | 'auth.openLoginModal'
  | 'dataDisplay.table.noData'
  | 'dataDisplay.table.loading'
  | 'dataDisplay.table.error'
  | 'dataDisplay.table.sortBy' // params: column
  | 'dataDisplay.table.rowsPerPage'
  | 'dataDisplay.table.pageInfo' // params: from, to, total
  | 'dataDisplay.pagination.ariaLabel'
  | 'dataDisplay.pagination.previous'
  | 'dataDisplay.pagination.next'
  | 'dataDisplay.pagination.page' // params: current, total
  | 'dataDisplay.pagination.goToPage' // params: page
  | 'dataDisplay.pagination.goToPreviousPage'
  | 'dataDisplay.pagination.goToNextPage'
  | 'dataDisplay.pagination.firstPage'
  | 'dataDisplay.pagination.lastPage'
  | 'dataDisplay.stats.total'
  | 'dataDisplay.stats.average'
  | 'dataDisplay.stats.min'
  | 'dataDisplay.stats.max'
  | 'dataDisplay.stats.count'
  | 'forms.placeholders.text' // params: field
  | 'forms.placeholders.select' // params: field
  | 'forms.placeholders.search'
  | 'forms.placeholders.date'
  | 'forms.placeholders.dateRange'
  | 'forms.placeholders.number'
  | 'forms.placeholders.password'
  | 'forms.placeholders.url'
  | 'forms.placeholders.email'
  | 'forms.placeholders.selectFilterType'
  | 'forms.placeholders.speciesName'
  | 'forms.labels.showPassword'
  | 'forms.labels.hidePassword'
  | 'forms.labels.copyToClipboard'
  | 'forms.labels.clearSelection'
  | 'forms.labels.selectOption'
  | 'forms.help.passwordStrength' // params: strength
  | 'forms.help.charactersRemaining' // params: count
  | 'forms.help.dateFormat' // params: format
  | 'forms.password.strength.label'
  | 'forms.password.strength.levels.weak'
  | 'forms.password.strength.levels.fair'
  | 'forms.password.strength.levels.good'
  | 'forms.password.strength.levels.strong'
  | 'forms.password.strength.suggestions.title'
  | 'forms.password.strength.suggestions.minLength'
  | 'forms.password.strength.suggestions.mixedCase'
  | 'forms.password.strength.suggestions.number'
  | 'forms.password.strength.suggestions.special'
  | 'forms.errors.radioValueRequired'
  | 'forms.dateRange.labels.startDate'
  | 'forms.dateRange.labels.endDate'
  | 'forms.dateRange.labels.quickSelect'
  | 'forms.dateRange.labels.selected' // params: startDate, endDate
  | 'forms.dateRange.presets.today'
  | 'forms.dateRange.presets.yesterday'
  | 'forms.dateRange.presets.last7Days'
  | 'forms.dateRange.presets.last30Days'
  | 'forms.dateRange.presets.thisMonth'
  | 'forms.dateRange.presets.lastMonth'
  | 'forms.dateRange.presets.thisYear'
  | 'forms.dateRange.errors.invalidStartDate'
  | 'forms.dateRange.errors.invalidEndDate'
  | 'forms.dateRange.errors.startAfterEnd'
  | 'forms.dateRange.errors.endBeforeStart'
  | 'forms.species.placeholder'
  | 'forms.species.empty'
  | 'forms.species.maxReached' // params: maxItems
  | 'forms.species.aria.dragToReorder' // params: species
  | 'forms.species.aria.edit'
  | 'forms.species.aria.remove'
  | 'media.audio.play'
  | 'media.audio.pause'
  | 'media.audio.stop'
  | 'media.audio.volume'
  | 'media.audio.mute'
  | 'media.audio.unmute'
  | 'media.audio.download'
  | 'media.audio.currentTime' // params: current, total
  | 'media.audio.loading'
  | 'media.audio.error'
  | 'media.audio.volumeGain' // params: value
  | 'media.audio.filterControl'
  | 'media.audio.highPassFilter' // params: freq
  | 'media.audio.seekProgress' // params: current, total;

/**
 * Parameter types for translations that require parameters
 */
export type TranslationParams = {
  'common.validation.minLength': { min: string | number };
  'common.validation.maxLength': { max: string | number };
  'common.validation.minValue': { min: string | number };
  'common.validation.maxValue': { max: string | number };
  'notifications.timeAgo.minutesAgo': { minutes: string | number };
  'notifications.timeAgo.hoursAgo': { hours: string | number };
  'notifications.timeAgo.daysAgo': { days: string | number };
  'search.resultsCount': { count: string | number; plural: string | number };
  'search.detailsPanel.expandDetails': { species: string | number };
  'search.detailsPanel.collapseDetails': { species: string | number };
  'search.detailsPanel.playAudio': { species: string | number };
  'search.detailsPanel.viewDetails': { species: string | number };
  'search.errors.searchFailed': { error: string | number };
  'search.pagination.page': { current: string | number; total: string | number };
  'dashboard.dailySummary.tooltips.viewHourly': { hour: string | number };
  'dashboard.dailySummary.tooltips.viewBiHourly': { startHour: string | number; endHour: string | number };
  'dashboard.dailySummary.tooltips.viewSixHourly': { startHour: string | number; endHour: string | number };
  'dashboard.dailySummary.tooltips.hourlyDetections': { count: string | number; hour: string | number };
  'dashboard.dailySummary.tooltips.biHourlyDetections': { count: string | number; startHour: string | number; endHour: string | number };
  'dashboard.dailySummary.tooltips.sixHourlyDetections': { count: string | number; startHour: string | number; endHour: string | number };
  'dashboard.recentDetections.modals.showSpecies': { species: string | number };
  'dashboard.recentDetections.modals.ignoreSpecies': { species: string | number };
  'dashboard.recentDetections.modals.showSpeciesConfirm': { species: string | number };
  'dashboard.recentDetections.modals.ignoreSpeciesConfirm': { species: string | number };
  'dashboard.recentDetections.modals.unlockDetectionConfirm': { species: string | number };
  'dashboard.recentDetections.modals.lockDetectionConfirm': { species: string | number };
  'dashboard.recentDetections.modals.deleteDetection': { species: string | number };
  'dashboard.recentDetections.modals.deleteDetectionConfirm': { species: string | number };
  'dashboard.errors.dailySummaryFetch': { status: string | number };
  'dashboard.errors.recentDetectionsFetch': { status: string | number };
  'dashboard.errors.configFetch': { status: string | number };
  'detections.titles.hourly': { hour: string | number; date: string | number };
  'detections.titles.hourlyRange': { startHour: string | number; endHour: string | number; date: string | number };
  'detections.titles.species': { species: string | number; date: string | number };
  'detections.titles.search': { query: string | number };
  'detections.titles.allDetections': { date: string | number };
  'detections.pagination.showing': { from: string | number; to: string | number; total: string | number };
  'detections.row.viewDetails': { species: string | number };
  'system.systemInfo.temperatureValue': { temp: string | number };
  'system.errors.systemInfo': { error: string | number };
  'system.errors.diskUsage': { error: string | number };
  'system.errors.memoryUsage': { error: string | number };
  'system.errors.temperature': { error: string | number };
  'system.errors.processes': { error: string | number };
  'settings.notFound.message': { section: string | number };
  'dataDisplay.table.sortBy': { column: string | number };
  'dataDisplay.table.pageInfo': { from: string | number; to: string | number; total: string | number };
  'dataDisplay.pagination.page': { current: string | number; total: string | number };
  'dataDisplay.pagination.goToPage': { page: string | number };
  'forms.placeholders.text': { field: string | number };
  'forms.placeholders.select': { field: string | number };
  'forms.help.passwordStrength': { strength: string | number };
  'forms.help.charactersRemaining': { count: string | number };
  'forms.help.dateFormat': { format: string | number };
  'forms.dateRange.labels.selected': { startDate: string | number; endDate: string | number };
  'forms.species.maxReached': { maxItems: string | number };
  'forms.species.aria.dragToReorder': { species: string | number };
  'media.audio.currentTime': { current: string | number; total: string | number };
  'media.audio.volumeGain': { value: string | number };
  'media.audio.highPassFilter': { freq: string | number };
  'media.audio.seekProgress': { current: string | number; total: string | number };
};

/**
 * Helper type to get parameters for a specific translation key
 */
export type GetParams<K extends TranslationKey> = K extends keyof TranslationParams
  ? TranslationParams[K]
  : never;

/**
 * Type-safe translation function signature
 */
export interface TranslateFunction {
  <K extends TranslationKey>(
    key: K,
    ...args: GetParams<K> extends never ? [] : [GetParams<K>]
  ): string;
}
