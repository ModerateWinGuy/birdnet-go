ruleDirs: []
rules:
  - id: csrf-token-validation
    message: 'CSRF token should be validated before use'
    severity: error
    language: typescript
    rule:
      pattern: |
        const token = $$$TOKEN$$$;
        $$$
        headers: { 'X-Csrf-Token': token }
      where:
        TOKEN:
          not:
            contains:
              any:
                - pattern: 'getCsrfToken()'
                - pattern: 'validateCsrfToken($$$)'

  - id: unsafe-innerHTML-svelte
    message: 'Using {@html} with user input - potential XSS'
    severity: error
    language: svelte
    rule:
      pattern: '{@html $VAR}'
      where:
        VAR:
          any:
            - regex: '(?i).*input.*'
            - regex: '(?i).*user.*'
            - regex: '(?i).*data\..*'
            - regex: '(?i).*response\..*'
          not:
            regex: '(?i).*Icon'

  - id: localstorage-xss-risk
    message: 'localStorage data should be validated - XSS risk'
    severity: warning
    language: typescript
    rule:
      pattern: 'JSON.parse(localStorage.getItem($KEY))'
      not:
        inside:
          any:
            - pattern: 'try { $$$ } catch ($$$) { $$$ }'
            - pattern: 'try { $$$ } catch { $$$ }'
            - pattern: 'validate($$$)'
            - pattern: 'sanitize($$$)'

  - id: password-logging
    message: 'Never log passwords or sensitive data'
    severity: error
    language: typescript
    rule:
      any:
        - pattern: 'console.log($$$, $PASSWORD, $$$)'
        - pattern: 'logger.$METHOD($$$, $PASSWORD, $$$)'
      where:
        PASSWORD:
          any:
            - regex: '(?i)password'
            - regex: '(?i).*password'
            - regex: '(?i)token'
            - regex: '(?i).*token'
            - regex: '(?i)secret'
            - regex: '(?i).*secret'
