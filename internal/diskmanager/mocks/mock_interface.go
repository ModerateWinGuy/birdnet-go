// Code generated by mockgen. DO NOT EDIT.
// Source: internal/diskmanager/file_utils.go

// Package mock_diskmanager is a generated GoMock package.
package mock_diskmanager

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// GetLockedNotesClipPaths mocks base method.
func (m *MockInterface) GetLockedNotesClipPaths() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLockedNotesClipPaths")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLockedNotesClipPaths indicates an expected call of GetLockedNotesClipPaths.
func (mr *MockInterfaceMockRecorder) GetLockedNotesClipPaths() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLockedNotesClipPaths", reflect.TypeOf((*MockInterface)(nil).GetLockedNotesClipPaths))
} 